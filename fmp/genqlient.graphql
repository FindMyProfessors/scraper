query GetSchools {
    schools(first: 50) {
        schools {
            id
            name
        }
        totalCount
    }
}

query GetProfessorByRMPId($rmpId: String!, $includeSchool: Boolean!) {
    professorByRMPId(rmpId: $rmpId) {
        id
        firstName
        lastName
        linked
        school @include(if: $includeSchool) {
            id
            name
        }
    }
}

query GetProfessors($schoolId: ID!, $after: String, $term: TermInput!) {
    professors(schoolId: $schoolId, first: 50, after: $after) {
        # @genqlient(bind: "-")
        professors {
            id
            firstName
            lastName
            reviews(first: 1) {
                reviews {
                    id
                }
            }
            teaches(term: $term, first: 50) {
                courses {
                    id
                    code
                    name
                }
                # @genqlient(bind: "github.com/FindMyProfessors/scraper/model.PageInfo")
                pageInfo {
                    hasNextPage
                }
                totalCount
            }
        }
        # @genqlient(bind: "github.com/FindMyProfessors/scraper/model.PageInfo")
        pageInfo {
            hasNextPage
            endCursor
        }
        totalCount

    }
}

query GetCourses($schoolId: ID!, $input: TermInput!, $after: String) {
    # @genqlient(bind: "-")
    school(id: $schoolId)  {
        courses(term: $input, first: 50, after: $after) {
            courses {
                id
                name
                code
            }
            # @genqlient(bind: "github.com/FindMyProfessors/scraper/model.PageInfo")
            pageInfo{
                hasNextPage
            }
            totalCount
        }
    }
}


mutation CreateProfessor($schoolId: ID!, $input: NewProfessor!) {
    createProfessor(schoolId: $schoolId, input: $input) {
        id
    }
}

mutation CreateCourse($schoolId: ID!, $input: NewCourse!) {
    createCourse(schoolId: $schoolId, input: $input) {
        id
    }
}

mutation CreateSchool($input: NewSchool!) {
    createSchool( input: $input) {
        id
    }
}

mutation CreateReview($professorId: ID!, $input: NewReview!) {
    createReview(professorId: $professorId, input: $input) {
        id
    }
}

mutation RegisterCourse($professorId:ID!, $courseId: ID!, $term: TermInput!) {
    registerProfessorForCourse(professorId:$professorId, courseId: $courseId,term:$term)
}